name: 📱 Build IPA for Device Testing

on:
  workflow_dispatch:
    inputs:
      build_configuration:
        description: 'Build Configuration'
        required: true
        default: 'Debug'
        type: choice
        options:
        - Debug
        - Release
      create_ipa:
        description: 'Create IPA file'
        required: true
        default: true
        type: boolean

jobs:
  build-ipa:
    name: 🏗️ Build SketchAI IPA
    runs-on: macos-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0'
    
    - name: 🛠️ Install XcodeGen
      run: brew install xcodegen
    
    - name: 📱 Generate Xcode Project
      run: xcodegen generate
    
    - name: 🔍 List Available Schemes
      run: xcodebuild -list -project SketchAI.xcodeproj
    
    - name: 🏗️ Build App for Device
      run: |
        echo "🚀 Building SketchAI for iOS Device..."
        
        # Kill any lingering simulator processes that could cause runtime conflicts
        echo "🔧 Killing lingering simulator processes..."
        sudo killall -9 com.apple.CoreSimulator.CoreSimulatorService 2>/dev/null || true
        
        # Build for iOS device (generic/platform=iOS)
        xcodebuild build \
          -project SketchAI.xcodeproj \
          -scheme SketchAI \
          -configuration ${{ inputs.build_configuration }} \
          -destination 'generic/platform=iOS' \
          -archivePath ./SketchAI.xcarchive \
          DEVELOPMENT_TEAM="" \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          PROVISIONING_PROFILE="" \
          ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS=NO \
          ASSETCATALOG_COMPILER_OPTIMIZATION=space \
          ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS=NO \
          ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOLS=NO \
          SUPPORTED_PLATFORMS="iphoneos" \
          VALID_ARCHS="arm64" \
          ARCHS="arm64" \
          EXCLUDED_ARCHS[sdk=iphonesimulator*]="arm64" \
          -allowProvisioningUpdates \
          archive
    
    - name: 📦 Create IPA File
      if: inputs.create_ipa
      run: |
        echo "📦 Creating IPA file from archive..."
        
        # Create IPA using xcodebuild
        xcodebuild -exportArchive \
          -archivePath ./SketchAI.xcarchive \
          -exportPath ./ipa-output \
          -exportOptionsPlist ./export-options.plist \
          -allowProvisioningUpdates
    
    - name: 📝 Create Export Options Plist
      if: inputs.create_ipa
      run: |
        cat > export-options.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>method</key>
          <string>development</string>
          <key>signingStyle</key>
          <string>automatic</string>
          <key>stripSwiftSymbols</key>
          <true/>
          <key>uploadBitcode</key>
          <false/>
          <key>uploadSymbols</key>
          <true/>
          <key>compileBitcode</key>
          <false/>
        </dict>
        </plist>
        EOF
    
    - name: 📁 List Build Output
      run: |
        echo "📁 Archive contents:"
        ls -la ./SketchAI.xcarchive/ || echo "No archive found"
        
        echo "📁 IPA output contents:"
        ls -la ./ipa-output/ || echo "No IPA output found"
        
        echo "📁 Finding all .ipa files:"
        find . -name "*.ipa" -type f || echo "No IPA files found"
        
        echo "📁 Finding all .app files:"
        find . -name "*.app" -type f || echo "No app files found"
    
    - name: 🔧 Alternative IPA Creation (if main method fails)
      if: inputs.create_ipa
      run: |
        echo "🔧 Attempting alternative IPA creation..."
        
        # Find the .app file
        APP_PATH=$(find ./SketchAI.xcarchive -name "*.app" -type d | head -1)
        
        if [ -n "$APP_PATH" ]; then
          echo "Found app at: $APP_PATH"
          
          # Create Payload directory
          mkdir -p Payload
          
          # Copy .app to Payload
          cp -R "$APP_PATH" Payload/
          
          # Create IPA file
          zip -r SketchAI-${{ inputs.build_configuration }}.ipa Payload/
          
          echo "✅ Created IPA file: SketchAI-${{ inputs.build_configuration }}.ipa"
          ls -la SketchAI-*.ipa
        else
          echo "❌ No .app file found in archive"
        fi
    
    - name: 📊 Build Summary
      run: |
        echo "📊 BUILD SUMMARY"
        echo "================"
        echo "Configuration: ${{ inputs.build_configuration }}"
        echo "Create IPA: ${{ inputs.create_ipa }}"
        echo "Xcode Version: 16.0"
        echo "Build Date: $(date)"
        
        if [ -f "SketchAI-${{ inputs.build_configuration }}.ipa" ]; then
          echo "✅ IPA Created Successfully!"
          echo "File Size: $(ls -lh SketchAI-*.ipa | awk '{print $5}')"
        else
          echo "⚠️ IPA creation may have failed"
        fi
    
    - name: 📤 Upload IPA as Artifact
      if: inputs.create_ipa
      uses: actions/upload-artifact@v4
      with:
        name: SketchAI-${{ inputs.build_configuration }}-IPA
        path: |
          SketchAI-*.ipa
          ./ipa-output/*.ipa
        retention-days: 30
        if-no-files-found: warn
    
    - name: 📤 Upload Archive as Backup
      uses: actions/upload-artifact@v4
      with:
        name: SketchAI-${{ inputs.build_configuration }}-Archive
        path: SketchAI.xcarchive
        retention-days: 7
        if-no-files-found: warn
    
    - name: 📋 Installation Instructions
      if: inputs.create_ipa
      run: |
        echo "📋 INSTALLATION INSTRUCTIONS"
        echo "============================"
        echo ""
        echo "To install the SketchAI app on your device:"
        echo ""
        echo "1. 📥 Download the IPA file from the GitHub Actions artifacts"
        echo "2. 📱 Install using one of these methods:"
        echo ""
        echo "   Method A - AltStore (Recommended):"
        echo "   • Install AltStore on your device"
        echo "   • Use AltStore to sideload the IPA file"
        echo ""
        echo "   Method B - Xcode (macOS required):"
        echo "   • Connect your device to Mac"
        echo "   • Open Xcode → Window → Devices and Simulators"
        echo "   • Select your device"
        echo "   • Drag and drop the IPA file to install"
        echo ""
        echo "   Method C - 3uTools or Similar:"
        echo "   • Use 3uTools, iMazing, or similar tools"
        echo "   • Connect device and install IPA"
        echo ""
        echo "3. ⚠️ Note: You may need to trust the developer certificate"
        echo "   • Go to Settings → General → VPN & Device Management"
        echo "   • Trust the developer profile"
        echo ""
        echo "🎉 Enjoy testing your SketchAI drawing app!"
